package uc.ucworks.videosnap

import androidx.compose.runtime.Composable
import androidx.compose.runtime.getValue
import androidx.compose.runtime.mutableStateOf
import androidx.compose.runtime.remember
import androidx.compose.runtime.setValue
import androidx.compose.ui.Modifier
import androidx.compose.ui.geometry.Rect
import androidx.compose.ui.layout.boundsInWindow
import androidx.compose.ui.layout.onGloballyPositioned
import androidx.compose.ui.input.pointer.pointerInput

/**
 * A modifier that makes a composable a drop target.
 *
 * @param onDrop A callback that is invoked when an item is dropped on the composable.
 * @return A [Modifier] that makes the composable a drop target.
 */
@Composable
fun Modifier.dropTarget(onDrop: (Any) -> Unit): Modifier {
    val state = LocalDragDropState.current
    var bounds by remember { mutableStateOf<Rect?>(null) }

    return this.onGloballyPositioned { coordinates ->
        bounds = coordinates.boundsInWindow()
    }.pointerInput(Unit) {
        awaitPointerEventScope {
            while (true) {
                val event = awaitPointerEvent()
                if (state.draggedItem != null) {
                    bounds?.let {
                        if (it.contains(event.changes.first().position)) {
                            // The dragged item is over the drop target
                        }
                    }
                }
                if (event.changes.first().pressed.not()) {
                    bounds?.let {
                        if (it.contains(event.changes.first().position)) {
                            state.draggedItem?.let { item ->
                                onDrop(item)
                            }
                        }
                    }
                }
            }
        }
    }
}
